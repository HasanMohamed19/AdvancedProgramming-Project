@using ServiceTitanWebApp.ViewModels
@model ServiceIndexViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var services = Model.Services.ToList();
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@{
    @if (TempData["CreateSuccess"] != null)
    {
        <div class="alert alert-success alert-dismissible" role="alert">
            <div>@TempData["CreateSuccess"].ToString()</div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    else if (TempData["EditSuccess"] != null)
    {
        <div class="alert alert-success alert-dismissible" role="alert">
            <div>@TempData["EditSuccess"].ToString()</div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    else if (TempData["DeleteSuccess"] != null)
    {
        <div class="alert alert-success alert-dismissible" role="alert">
            <div>@TempData["DeleteSuccess"].ToString()</div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    } else if (TempData["cannotDelete"] != null)
    {
        @Html.Raw(TempData["cannotDelete"])
    }
}

<form asp-controller="Service" method="get" asp-action="Index" class="mb-3">
    <div class="hstack gap-2" style="max-width:45rem;">
        <input class="form-control" type="text" name="searchName" asp-for="searchName" placeholder="Search" />
        <label asp-for="searchName">Name:</label>
        <select style="max-width:10rem;" class="form-select" name="searchCategory" asp-for="searchCategory" asp-items="Model.Categories.Select(m => new SelectListItem{Text = m.CategoryName, Value = m.CategoryID.ToString()})">
            <option value="">All</option>
        </select>
        <a asp-controller="Service" asp-action="Index" class="btn btn-outline-danger">
            Clear
        </a>
        <input type="submit" value="Search" class="btn btn-secondary" />
    </div>
</form>

<div class="row row-cols-1 row-cols-lg-3 g-3">
    @foreach (var item in Model.Services)
    {
        <div class="col">
            <div class="card text-center">
                <div class="card-header">
                    <h3 class="card-title">
                        @Html.DisplayFor(modelItem => item.ServiceName)
                    </h3>
                </div>
                <div class="card-body">
                    <div class="crop-text-2" style="height:3rem;">
                        @Html.DisplayFor(modelItem => item.ServicePrice)
                    </div>
                    @if (item.ServiceTechnicians.Count() != 0)
                    {
                        <div>
                            @Html.DisplayFor(modelItem => item.ServiceTechnicians.Count())
                        </div>
                    }
                    else
                    {
                        <div class="fst-italic">
                            No Technicians
                        </div>
                    }
                    <hr class="m-2" />
                    <div class="g-2">
                        <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.ServiceID">Details</a>
                        @if (User.IsInRole("Admin") || (User.IsInRole("Manager") && item.Category.CategoryManagerId == Convert.ToInt32(TempData["userId"])))
                        {
                            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.ServiceID">Edit</a>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.ServiceID">Delete</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>