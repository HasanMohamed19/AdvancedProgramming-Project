@using ServiceTitanWebApp.ViewModels
@model ServiceIndexViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>


<div class="container p-3">

    <div class="row pt-4">

        <div class="col-8">
            <form asp-controller="Service" method="get" asp-action="Index">
                Service Name:
                <input type="text" name="searchName" asp-for="searchName" />


                Category:
                <select name="searchCategory" asp-for="searchName" asp-items="Model.Categories.Select(c => new SelectListItem{Text = c.CategoryName, Value = c.CategoryID.ToString()})">
                    <option value="">All</option>
                </select>

                <a asp-controller="Service" asp-action="Index" class="btn btn-outline-danger">
                    Clear
                </a>
                <input type="submit" value="Search" class="btn btn-secondary mx-2" />
            </form>
        </div>



        <table class="table">
            <thead>
                <tr>
                    <th>
                        @*@Html.DisplayNameFor(model => model.CategoryName)*@
                        Service Name
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.CategoryDescription)*@
                        Service Description
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.CategoryManager)*@
                        Service Price
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var service in Model.Services)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => service.ServiceName)

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => service.ServiceDescription)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => service.ServicePrice)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@service.ServiceID">Edit</a> |
                            <a asp-action="Details" asp-route-id="@service.ServiceID">Details</a> |
                            <a asp-action="Delete" asp-route-id="@service.ServiceID">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>