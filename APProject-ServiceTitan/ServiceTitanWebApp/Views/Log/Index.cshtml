@using ServiceTitanWebApp.ViewModels
@model LogIndexViewModel


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="container p-3">

    <div class="row pt-4">
<div class="col-8">
    @* <form asp-controller="Log" method="get" asp-action="Index">

        User Name:
            <input type="text" name="searchUser" asp-for="searchUser" />

        Log Type:
        <select name="searchLogType" asp-for="searchLogType" asp-items="Model.LogTypes.Select(lt => new SelectListItem{Text = lt, Value = lt})">
            <option value="">All</option>
        </select>

        <a asp-controller="Log" asp-action="Index" class="btn btn-outline-danger">
            Clear
        </a>
        <input type="submit" value="Search" class="btn btn-secondary mx-2" />
    </form> *@
            <form asp-controller="Log" method="get" asp-action="Index" class="mb-3">
                <div class="hstack gap-2" style="max-width:45rem;">
                    <input class="form-control" type="text" name="searchUser" asp-for="searchUser" placeholder="Search" />
                    <label asp-for="searchLogType">Type:</label>
                    <select style="max-width:10rem;" class="form-select" name="searchLogType" asp-for="searchLogType" asp-items="Model.LogTypes.Select(lt => new SelectListItem{Text = lt, Value = lt})">
                        <option value="">All</option>
                    </select>
                    <a asp-controller="Log" asp-action="Index" class="btn btn-outline-danger">
                        Clear
                    </a>
                    <input type="submit" value="Search" class="btn btn-secondary" />
                </div>
            </form>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Source
            </th>
            <th>
                Time
            </th>
            <th>
                Message
            </th>
            <th>
                Original Value
            </th>
            <th>
                Current Value
            </th>
            <th>
                Type
            </th>
            <th>
                User
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Logs) {
        <tr style="max-height:3rem;">
            <td>
                @Html.DisplayFor(modelItem => item.Source)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Time)
            </td>
            <td class="text-truncate" style="max-width:15rem;">
                @Html.DisplayFor(modelItem => item.Message)
            </td>
                        <td class="text-truncate" style="max-width:15rem;">
                @Html.DisplayFor(modelItem => item.OriginalValue)
            </td>
                        <td class="text-truncate" style="max-width:15rem;">
                @Html.DisplayFor(modelItem => item.CurrentValue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.UserEmail)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.LogID">Details</a>
            </td>
        </tr>
}
    </tbody>
</table>
    </div>
</div>